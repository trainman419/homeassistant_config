homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 37.4625
  longitude: -122.2405
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 20
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Los_Angeles

# logging setup
logger:
  default: info
  logs:
    homeassistant.components.automation: debug

# Enables the frontend
frontend:

http:
  # Uncomment this to add a password (recommended!)
  # api_password: PASSWORD

# Checks for available updates
updater:

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:

# Track the sun
sun:

# Weather Prediction
sensor:
#  - platform: yr
  - platform: yweather
    monitored_conditions:
      - weather
      - weather_current
      - temp_min
      - temp_max
      - temperature
      - humidity
  - platform: template
    sensors:
      temperature_difference:
        value_template: '{{ (states.sensor.downstairs_temperature.state|float - states.sensor.upstairs_temperature.state|float)|abs|round(2) }}'
        friendly_name: 'Temperature Difference'
        unit_of_measurement: 'Â°F'


light:
  - platform: hue
    host: 192.168.1.83

switch:
  - platform: tplink
    host: 192.168.1.105

ecobee: !include ecobee.yaml

device_tracker:
  - platform: unifi
    host: 192.168.1.1
    username: hendrix
    password: !include unifi_password.yaml

#influxdb:

automation:
  - alias: Turn Fan on when Heater is On
    trigger:
      platform: state
      entity_id: climate.downstairs
    condition:
      condition: template
      value_template: '{{ states.climate.downstairs.attributes.operation == "heat" }}'
    action:
      service: switch.turn_on
      entity_id: switch.fan

  - alias: Turn Fan off when Heater is Off
    trigger:
      platform: state
      entity_id: climate.downstairs
    condition:
      condition: template
      value_template: '{{ states.climate.downstairs.attributes.operation == "idle" }}'
    action:
      service: switch.turn_off
      entity_id: switch.fan

  - alias: Turn Fan on
    trigger:
      platform: state
      entity_id: climate.downstairs
    condition:
      condition: template
      value_template: '{{ states.sensor.temperatuer.difference.state|float > 5 }}'
    action:
      service: switch.turn_on
      entity_id: switch.fan

  - alias: Turn Fan off
    trigger:
      platform: state
      entity_id: climate.downstairs
    condition:
      condition: template
      value_template: '{{ states.sensor.temperatuer.difference.state|float < 3 }}'
    action:
      service: switch.turn_off
      entity_id: switch.fan

